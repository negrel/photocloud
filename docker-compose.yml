version: "3"

services:
  # Continuous file synchronizatio
  syncthing:
    image: syncthing/syncthing:1.21.0
    environment:
      - PUID=1000
      - PGID=1000
    ports:
      - 8384:8384 # Web UI
      - 22000:22000/tcp # TCP file transfers
      - 22000:22000/udp # QUIC file transfers
      - 21027:21027/udp # Receive local discovery broadcasts
    volumes:
      # Syncthing configurations
      - $VOLUMES_DIR/syncthing/config:/var/syncthing/config
      # Store synchronized files under photos/synced/
      - $VOLUMES_DIR/photos/synced:/var/syncthing/data

  # Sort files as their received from syncthing
  photosort:
    image: negrel/photosort:v0.5.2
    restart: always
    volumes:
      - $VOLUMES_DIR/photosort/config.toml:/etc/photosort.toml:ro
        # mount the entire /photos directory
        # Destination directory will be within /photos otherwise hardlinks
        # won't work.
      - $VOLUMES_DIR/photos/:/photos

  photoview:
    image: viktorstrate/photoview:2.3.13
    restart: always
    ports:
      - "8000:80"

    environment:
      - PHOTOVIEW_DATABASE_DRIVER=sqlite
      - PHOTOVIEW_SQLITE_URL=/data/photoview.db
      - PHOTOVIEW_LISTEN_IP=0.0.0.0
      - PHOTOVIEW_LISTEN_PORT=80
      - PHOTOVIEW_MEDIA_CACHE=/app/cache

      # Optional: To enable map related features, you need to create a mapbox token.
      # A token can be generated for free here https://account.mapbox.com/access-tokens/
      # It's a good idea to limit the scope of the token to your own domain, to prevent others from using it.
      # - MAPBOX_TOKEN=<YOUR TOKEN HERE>

    volumes:
      - $VOLUMES_DIR/photos/sorted:/photos:ro
      - $VOLUMES_DIR/photoview/data:/data
      - api_cache:/app/cache

  cron:
    image: photocloud_cleaner
    build:
      context: .
      dockerfile: cron/Dockerfile
    environment:
      - TZ=Europe/Paris
      # photosort out directory
      - PHOTOSORT_OUTDIR=/photos
      # See `exif_fix.sh` in README.md
      # One of monthly, weekly, daily, hourly
      - EXIF_FIX=weekly
      # Trash sorted files whose source has been removed by syncthing
      - TRASH_REMOVED=daily
      # See `When cron service remove file` in README.md
      # One of monthly, weekly, daily, hourly
      - EMPTY_TRASH=weekly
    volumes:
      - $VOLUMES_DIR/photos/sorted:/photos

volumes:
  api_cache: {}
